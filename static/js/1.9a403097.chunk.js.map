{"version":3,"sources":["Components/Loader/Loader.module.css","Components/Contacts/ContactsPage.module.css","redux/contacts/contacts-selectors.js","utils/filter.js","Components/ContactForm/ContactForm.jsx","utils/searchName.js","Components/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Loader/Loader.jsx","Components/Contacts/Contacts.jsx","Pages/ContactsPage.jsx","utils/capitalize.js","Components/Input/Input.jsx","Components/Input/Input.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","getFilter","state","contacts","filter","getAllContacts","items","getLoading","loading","getFilteredContacts","createSelector","array","regExp","RegExp","item","test","name","filteredData","INITIAL_STATE","number","ContactForm","useState","contact","setContact","useSelector","dispatch","useDispatch","handleChange","event","target","value","onSubmit","query","preventDefault","find","el","alert","addContact","className","styles","form","Input","type","pattern","title","onChange","Button","text","ContactListItem","id","ContactList","map","Filter","changeFilter","App","wrapper","color","height","width","timeout","Component","ContactsPage","useEffect","fetchContacts","contactsSection","length","string","charAt","toUpperCase","slice","input","required"],"mappings":"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","file":"static/js/1.9a403097.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__P3VPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsSection\":\"ContactsPage_contactsSection__1YRxx\",\"wrapper\":\"ContactsPage_wrapper__3cviT\",\"title\":\"ContactsPage_title__XSXzz\"};","import { createSelector } from '@reduxjs/toolkit';\r\nimport { filteredData } from '../../utils/filter';\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getError = state => state.contacts.error;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => filteredData(contacts, filter),\r\n);\r\n"," const filteredData = (array, filter) => {\r\n    const regExp = new RegExp(filter, 'gi');\r\n  \r\n    if (!filter) {\r\n      return array;\r\n    }\r\n    return array.filter(item => regExp.test(item.name));\r\n  };\r\n  \r\n  export {filteredData}","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { searchName } from '../../utils/searchName';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\r\nimport Button from '../Button';\r\nimport Input from '../Input';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = { name: '', number: '' };\r\n\r\nexport default function ContactForm() {\r\n  const [contact, setContact] = useState(INITIAL_STATE);\r\n\r\n  const contacts = useSelector(getAllContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setContact({ ...contact, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const isFind = searchName(contacts, contact.name);\r\n    if (isFind) {\r\n      alert(`${contact.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    dispatch(addContact(contact));\r\n    setContact(INITIAL_STATE);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={contact.name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={handleChange}\r\n      />\r\n      <Input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={contact.number}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        onChange={handleChange}\r\n      />\r\n      <Button type=\"submit\" text=\"Add contact\" />\r\n    </form>\r\n  );\r\n}\r\n","  \r\nconst searchName = (array, query) => array.find(el => el.name === query);\r\n\r\nexport {searchName};","import Button from '../Button';\r\nimport styles from './ContactListItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ contact: { name, number, id } }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>\r\n        {name} : {number}\r\n      </span>\r\n      <Button text=\"Delete\" id={id} />\r\n    </li>\r\n  );\r\n};\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n};\r\nexport default ContactListItem;","import { useSelector } from 'react-redux';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport Input from '../Input';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n  const onChangeFilter = event => dispatch(changeFilter(event.target.value));\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      value={value}\r\n      name=\"find contacts by name\"\r\n      onChange={onChangeFilter}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"black\"\r\n          height={30}\r\n          width={30}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\nimport {\r\n  getAllContacts,\r\n  getLoading,\r\n} from '../../redux/contacts/contacts-selectors';\r\nimport ContactForm from '../ContactForm';\r\nimport ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\nimport Loader from '../Loader';\r\nimport styles from './ContactsPage.module.css';\r\n\r\nexport default function ContactsPage() {\r\n  const contacts = useSelector(getAllContacts);\r\n  const loading = useSelector(getLoading);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(fetchContacts()), []);\r\n\r\n  return (\r\n    <section className={styles.contactsSection}>\r\n      {loading && <Loader />}\r\n      <div className={styles.wrapper}>\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.title}>Contacts</h2>\r\n        {contacts.length > 1 && <Filter />}\r\n        {contacts.length > 0 && <ContactList />}\r\n        {contacts.length === 0 && (\r\n          <h3 className={styles.title}>Your Phonebook is empty!!!</h3>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import Contacts from '../Components/Contacts';\r\nconst ContactsPage = () => {\r\n  return <Contacts />;\r\n};\r\n\r\nexport default ContactsPage;\r\n","\r\nconst capitalize = string => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  export {capitalize};","import { capitalize } from '../../utils/capitalize';\r\nimport styles from './Input.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({\r\n  type = 'text',\r\n  name = 'input',\r\n  pattern,\r\n  title = 'input',\r\n  value = '',\r\n  onChange,\r\n}) => {\r\n  const text = capitalize(name);\r\n  return (\r\n    <label>\r\n      <span className={styles.text}>{text}</span>\r\n      <input\r\n        className={styles.input}\r\n        type={type}\r\n        name={name}\r\n        pattern={pattern}\r\n        title={title}\r\n        value={value}\r\n        required\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Input_text__k-5fv\",\"input\":\"Input_input__LEebk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__wE0JS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__22IUb\",\"text\":\"ContactListItem_text__3u3_L\"};"],"sourceRoot":""}