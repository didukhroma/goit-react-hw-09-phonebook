{"version":3,"sources":["Components/Navigation/Navigation.module.css","Components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","Components/UserMenu/UserMenu.module.css","Components/AppBar/AppBar.module.css","Components/Button/Button.jsx","redux/auth/auth-actions.js","Components/Button/index.js","redux/contacts/contacts-operations.js","Components/Container/Container.module.css","Components/Button/Button.module.css","redux/contacts/contacts-actions.js","redux/auth/auth-selectors.js","Components/AuthNav/AuthNav.jsx","Components/Container/Container.jsx","Routes/routes.js","Components/Navigation/Navigation.jsx","Components/UserMenu/UserMenu.jsx","Components/AppBar/AppBar.jsx","Components/Router/PrivateRoute/PrivateRoute.jsx","Components/Router/PublicRoute/PublicRoute.jsx","Components/Router/Router.jsx","Components/App/App.jsx","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","userData","dispatch","a","authActions","post","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","Button","type","text","id","cdOnClick","className","useDispatch","onClick","deleteContact","cx","styles","button","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","fetchContacts","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContact","contact","addContactRequest","addContactSuccess","addContactError","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","changeFilter","getIsAuthenticated","state","isAuthenticated","getUserEmail","user","email","AuthNav","to","exact","link","activeClassName","activeLink","Container","children","styleClass","container","routes","path","component","lazy","publicRoute","redirect","navPath","mainPage","find","contactsPage","Navigation","useSelector","nav","navLink","navLinkActive","UserMenu","userEmail","onLogout","useCallback","authOperations","wrapper","AppBar","header","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","MainPage","RegisterPage","LoginPage","ContactsPage","Router","fallback","App","useEffect","contactsReducer","createReducer","_","payload","filter","loadingReducer","filterReducer","setError","alert","errorReducer","initialUserState","name","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","rootContactsReducer","combineReducers","items","loading","rootAuthReducer","rootReducer","persistReducer","contacts","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1b4bfb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__CabNe\",\"navLink\":\"Navigation_navLink__2oATi\",\"navLinkActive\":\"Navigation_navLinkActive__2uUHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__h0nUe\",\"activeLink\":\"AuthNav_activeLink__f_m4a\"};","import axios from 'axios';\r\nimport * as authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n//---------------register\r\nexport const register = userData => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/signup', userData);\r\n\r\n    token.set(data.token);\r\n    dispatch(authActions.registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n//---------------login\r\nexport const logIn = userData => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/login', userData);\r\n\r\n    token.set(data.token);\r\n    dispatch(authActions.loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n//---------------logout\r\nexport const logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n//---------------current user\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserMenu_wrapper__xydga\",\"text\":\"UserMenu_text__3Ik9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1gofR\",\"wrapper\":\"AppBar_wrapper__3s2Nv\"};","import { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\nimport styles from './Button.module.css';\r\nexport default function Button({\r\n  type = 'button',\r\n  text = 'Button',\r\n  id,\r\n  cdOnClick,\r\n  className,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (cdOnClick) return cdOnClick();\r\n    if (!id) return;\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={handleClick}\r\n      className={cx(styles.button, className)}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  id: PropTypes.string,\r\n  cdOnClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","export { default } from './Button';\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error.message));\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2VM00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1cjkc\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport { getIsAuthenticated, getUserEmail };\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/goit-react-hw-09-phonebook/register\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Registration\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/goit-react-hw-09-phonebook/login\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      LogIn\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\nimport cx from 'classnames';\r\nconst Container = ({ children, styleClass }) => {\r\n  return <div className={cx(styles.container, styleClass)}>{children}</div>;\r\n};\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  styleClass: PropTypes.string,\r\n};\r\nexport default Container;\r\n","import { lazy } from 'react';\r\nconst MainPage = lazy(() => import('../Pages/MainPage'));\r\nconst RegisterPage = lazy(() => import('../Pages/RegisterPage'));\r\nconst LoginPage = lazy(() => import('../Pages/LoginPage'));\r\nconst ContactsPage = lazy(() => import('../Pages/ContactsPage'));\r\n\r\nconst routes = [\r\n  {\r\n    id: 'MainPage',\r\n    path: '/',\r\n    component: MainPage,\r\n    exact: true,\r\n    text: 'MainPage',\r\n    publicRoute: true,\r\n    redirect: '/',\r\n  },\r\n  {\r\n    id: 'RegisterPage',\r\n    path: '/register',\r\n    component: RegisterPage,\r\n    exact: true,\r\n    text: 'RegisterPage',\r\n    publicRoute: true,\r\n    redirect: '/contacts',\r\n  },\r\n  {\r\n    id: 'LoginPage',\r\n    path: '/login',\r\n    component: LoginPage,\r\n    exact: true,\r\n    text: 'LoginPage',\r\n    publicRoute: true,\r\n    redirect: '/contacts',\r\n  },\r\n  {\r\n    id: 'ContactsPage',\r\n    path: '/contacts',\r\n    component: ContactsPage,\r\n    exact: true,\r\n    text: 'ContactsPage',\r\n    publicRoute: false,\r\n    redirect: '/login',\r\n  },\r\n];\r\n//---------------------------------------Header-Navigation\r\nconst mainPage = routes.find(({ id }) => id === 'MainPage');\r\nconst contactsPage = routes.find(({ id }) => id === 'ContactsPage');\r\nconst navPath = { mainPage, contactsPage };\r\n//--------------------------------------\r\nexport { routes, navPath };\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n// import cx from 'classnames';\r\nimport { navPath } from '../../Routes/routes';\r\nimport styles from './Navigation.module.css';\r\nconst { mainPage, contactsPage } = navPath;\r\nexport default function Navigation() {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink\r\n        exact={mainPage.exact}\r\n        to={mainPage.path}\r\n        className={styles.navLink}\r\n        activeClassName={styles.navLinkActive}\r\n      >\r\n        {mainPage.text}\r\n      </NavLink>\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          exact={contactsPage.exact}\r\n          to={contactsPage.path}\r\n          className={styles.navLink}\r\n          activeClassName={styles.navLinkActive}\r\n        >\r\n          {contactsPage.text}\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserEmail } from '../../redux/auth/auth-selectors';\r\nimport * as authOperations from '../../redux/auth/auth-operations';\r\nimport Button from '../Button';\r\nimport styles from './UserMenu.module.css';\r\nexport default function UserMenu() {\r\n  const userEmail = useSelector(getUserEmail);\r\n\r\n  const dispatch = useDispatch();\r\n  const onLogout = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <p className={styles.text}>Welcome {userEmail} !</p>\r\n      <Button text={'LogOut'} cdOnClick={onLogout} />\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\nimport PropTypes from 'prop-types';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport Container from '../Container';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport styles from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  return (\r\n    <header className={styles.header}>\r\n      <Container styleClass={styles.wrapper}>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n      </Container>\r\n    </header>\r\n  );\r\n}\r\n\r\nAppBar.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({ children, redirectTo, ...routeProps }) {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  children: PropTypes.node,\r\n  redirectTo: PropTypes.string,\r\n};\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getIsAuthenticated } from '../../../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({ redirectTo, children, ...routeProps }) {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\nPublicRoute.propTypes = {\r\n  children: PropTypes.node,\r\n  redirectTo: PropTypes.string,\r\n};\r\n","import { Suspense, lazy } from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n// import { routes } from '../../Routes/routes';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst MainPage = lazy(() => import('../../Pages/MainPage'));\r\nconst RegisterPage = lazy(() => import('../../Pages/RegisterPage'));\r\nconst LoginPage = lazy(() => import('../../Pages/LoginPage'));\r\nconst ContactsPage = lazy(() => import('../../Pages/ContactsPage'));\r\n\r\nconst Router = () => {\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<h1>Loading...</h1>}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/goit-react-hw-09-phonebook/\">\r\n            <MainPage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute\r\n            path=\"/goit-react-hw-09-phonebook/register\"\r\n            restricted\r\n            redirectTo=\"/goit-react-hw-09-phonebook/contacts\"\r\n          >\r\n            <RegisterPage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute\r\n            path=\"/goit-react-hw-09-phonebook/login\"\r\n            restricted\r\n            redirectTo=\"/goit-react-hw-09-phonebook/contacts\"\r\n          >\r\n            <LoginPage />\r\n          </PublicRoute>\r\n\r\n          <PrivateRoute\r\n            path=\"/goit-react-hw-09-phonebook/contacts\"\r\n            redirectTo=\"/goit-react-hw-09-phonebook/login\"\r\n          >\r\n            <ContactsPage />\r\n          </PrivateRoute>\r\n          <Redirect to=\"/goit-react-hw-09-phonebook/\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n\r\n//\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentUser } from '../../redux/auth/auth-operations';\r\nimport AppBar from '../AppBar';\r\nimport Container from '../Container';\r\nimport Router from '../Router';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <AppBar />\r\n      <Container>\r\n        <Router />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  onGetCurrentUser: PropTypes.func,\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst setError = (_, { payload }) => alert(payload);\r\nconst errorReducer = createReducer(null, {\r\n  [fetchContactsError]: () => setError,\r\n  [addContactError]: () => setError,\r\n  [deleteContactError]: () => setError,\r\n});\r\n\r\nexport { contactsReducer, loadingReducer, filterReducer, errorReducer };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport * as authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => alert(payload);\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport { user, isAuthenticated, token, error };\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  contactsReducer,\r\n  loadingReducer,\r\n  filterReducer,\r\n  errorReducer,\r\n} from './contacts/contacts-reducer';\r\nimport { user, isAuthenticated, token, error } from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst rootContactsReducer = combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n});\r\nconst rootAuthReducer = combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\nconst rootReducer = combineReducers({\r\n  auth: persistReducer(authPersistConfig, rootAuthReducer),\r\n  contacts: rootContactsReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './Components/App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}